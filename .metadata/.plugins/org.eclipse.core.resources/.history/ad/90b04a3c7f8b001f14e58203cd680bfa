package linkedlist;

public class Dnode {
    int data;
    Dnode left, right;
    Node root, last;

    public Dnode(int data) {
        this.data = data;
        this.left = this.right = null;
    }

    void create_list() {
        root = last = null; // Preparing with empty root
    }

    void left_insert(int data) {
        Node n = new Node(data);
        if (root == null && last == null) {
            root = last = n; // If list is empty, set root to new node
        } else {
            n.next = root; // Point new node to current root
            root.left = n; // Set previous of current root to new node
            root = n; // Update root to the new node
        }
        root.prev = last;
        last.next = root; // Maintain circular structure
    }
}
