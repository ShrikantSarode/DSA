package dsa_assignments;

class Node1 {
    int data;
    Node1 next;

    public Node1(int data) {
        this.data = data;
        this.next = null; // Initialize next as null
    }
}

public class C_LinkedList {
    Node1 head;

    public void addDigit(int data) {
        Node1 newNode = new Node1(data);
        if (head == null) {
            head = newNode;
        } else {
            Node1 current = head;
            while (current.next != null) {
                current = current.next;
            }
            current.next = newNode;
        }
    }

    public void display() {
        Node1 current = head;
        while (current != null) {
            System.out.print(current.data + " ");
            current = current.next;
        }
        System.out.println();
    }

    public static void main(String[] args) {
        C_LinkedList list = new C_LinkedList();
        int number = 368;

        // Extract digits and add to list in reverse order to preserve order
        while (number > 0) {
            int digit = number % 10;
            list.addDigit(digit);
            number /= 10;
        }

        // Since we added digits in reverse order, we need to reverse the list
        list.head = reverseList(list.head);

        System.out.println("Linked List:");
        list.display();
    }

    // Function to reverse the linked list
    public static Node1 reverseList(Node1 head) {
        Node1 prev = null;
        Node1 current = head;
        Node1 next = null;
        while (current != null) {
            next = current.next;
            current.next = prev;
            prev = current;
            current = next;
        }
        return prev;
    }
}
